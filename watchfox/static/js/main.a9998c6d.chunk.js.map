{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["styles","layout","display","flexDirection","flexWrap","justifyContent","width","alignItems","bar","App","getLevel","level","react_default","a","createElement","style","color","fontSize","fontWeight","className","height","transform","Icon","name","this","setState","loading","loaded","error","URL","socket","io","connect","_this2","state","_this$state","googleDatabase","amazonDatabase","whois","phishing","ssl","lastCheck","availableRate","frequent","total","collected","on","data","rating","emit","e","_ref","maxRating","url","rate","_this3","_this$state2","_this$state3","minHeight","maxHeight","transition","src","alt","onClick","Input","fluid","icon","inverted","circular","link","onSubmit","bind","placeholder","onChange","event","value","onKeyPress","key","margin","Segment","Grid","columns","stackable","Row","Divider","vertical","Column","Header","Rating","onRate","size","textAlign","overflowY","overflowX","react_markdown_default","source","concat","escapeHtml","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9998c6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Icon, Input, Segment, Grid, Divider, Header, Rating, Button, Loader} from 'semantic-ui-react';\nimport ReactMarkdown from 'react-markdown';\nimport io from 'socket.io-client';\n\nconst styles = {\n    layout: {\n        display: \"flex\",\n        flexDirection: 'row',\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        width: '70vw',\n        alignItems: 'center'\n    },\n    bar: {\n        width: '85%'\n    }\n};\n\nclass App extends Component {\n    componentWillMount(){\n        this.setState({\n            loading: false,\n            loaded: false,\n            error: false,\n            level: 0,\n            URL: '',\n            socket: io.connect('http://localhost:5000/normal', )\n        });\n    }\n    onSubmit(){\n        const {socket} = this.state;\n        const {googleDatabase, amazonDatabase, whois, phishing, ssl, lastCheck, availableRate, frequent, total, collected} = this.state;\n\n        socket.on('google', (data)=>{this.setState({googleDatabase: data})});\n        socket.on('amazon', (data)=>{this.setState({amazonDatabase: data})});\n        socket.on('whois', (data)=>{this.setState({whois: data})});\n        socket.on('phishing', (data)=>{this.setState({phishing: data})});\n        socket.on('ssl', (data)=>{this.setState({ssl: data})});\n        socket.on('lastCheck', (data)=>{this.setState({lastCheck: data})});\n        socket.on('availableRate', (data)=>{this.setState({availableRate: data})});\n        socket.on('frequent', (data)=>{this.setState({frequent: data})});\n        socket.on('total', (data)=>{this.setState({total: data})});\n        socket.on('collected', (data)=>{this.setState({collected: data})});\n        socket.on('loaded', ()=>{this.setState({loading: false})});\n        socket.on('level', (data)=>{this.setState({level: data})});\n        socket.on('rating', (data)=>{this.setState({rating: data})});\n\n        socket.on('invalid', ()=>{\n            this.setState({\n                loading: false,\n                loaded: false,\n                error: true,\n            });\n        });\n\n\n        if (this.state.URL === '') {\n            this.setState({error: true});\n            return\n        }\n        socket.emit('query', this.state.URL);\n        this.setState({error: false, loading: true, loaded: true, googleDatabase: false, amazonDatabase: false,\n            whois: false,\n            phishing: false,\n            ssl: false,\n            lastCheck: false,\n            availableRate: false,\n            frequent: false,\n            total: false,\n            collected: false,\n            level: 0,\n            rating: 0\n        });\n    }\n    onRate(e, {rating, maxRating}){\n        this.state.socket.emit(\"rate\", {url: this.state.URL, rate: rating});\n        this.setState({rating: rating})\n    };\n    getLevel = (level) => {\n        switch (level){\n            case 0:\n                return (<div style={{\n                    color: 'gray',\n                    fontSize: '25px',\n                    fontWeight: '1000'\n                }}>\n                    <span className='lds-hourglass' style={{ height: \"32px\", width: \"32px\", transform: \"translateY(9px)\" }}/>\n                    Loading\n                </div>);\n            case 1:\n                return (<div style={{\n                    color: 'green',\n                    fontSize: '25px',\n                    fontWeight: '1000'\n                }}>\n                    <Icon name='check'/>\n                    SAFE!\n                </div>);\n            case 2:\n                return (\n                    <div style={{\n                        color: 'red',\n                        fontSize: '25px',\n                        fontWeight: '1000'\n                    }}>\n                        <Icon name='x'/>\n                        DANGER!\n                    </div>\n                );\n            case 3:\n                return (\n                    <div style={{\n                        color: 'darkorange',\n                        fontSize: '25px',\n                        fontWeight: '1000'\n                    }}>\n                        <Icon name='exclamation triangle'/>\n                        PHISHING!\n                    </div>\n                );\n        }\n    };\n  render() {\n        const {loading, loaded, error} = this.state;\n        const {googleDatabase, amazonDatabase, whois, phishing, ssl, lastCheck, availableRate, frequent, total, collected, level, rating} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" style={loaded?{minHeight: '20vh', maxHeight: '20vh', transition: 'all 1s'}:{transition: 'all 1s'}}>\n            <div style={styles.layout}>\n                <img src='logo.png' style={\n                    loaded?{\n                    width: `10%`,\n                    height: `10%`,\n                    transition: \"all 1s\",\n                }:{transition: \"all 1s\",\n                        width:\"50%\",\n                        height: \"50%\"}} alt=\"logo\" onClick={()=>{this.setState({loading: false, loaded: false})}} />\n              <div style={styles.bar}>\n                <Input fluid loading={loading} icon=\n                    {loading?\n                        null :\n                        <Icon  name='search' inverted circular link\n                               onClick={this.onSubmit.bind(this)}\n                        />\n                    }\n                    placeholder='Input URL'\n                       onChange={(event, data)=>{ this.setState({URL: data.value})}}\n                       onKeyPress={(e)=>{if (e.key === 'Enter') this.onSubmit();}}\n                       error={error}\n                />\n              </div>\n            </div>\n        </header>\n          {loaded?\n              <div style={{ margin: \"10px auto\", width: '95vw' }}>\n                  <Segment placeholder>\n                    <Grid columns={2} stackable>\n                        <Grid.Row>\n                            <Divider vertical> Summary </Divider>\n                            <Grid.Column>\n                                <Header icon>\n                                    <Icon name='gem outline' />\n                                    WatchFox Index\n                                </Header>\n                                {this.getLevel(level)}\n                            </Grid.Column>\n\n                            <Grid.Column>\n                                <Header icon>\n                                    <Icon name='comments outline' />\n                                    Community Reputation\n                                </Header>\n                                <Rating onRate={this.onRate.bind(this)} maxRating={8} rating={rating} icon='star' size='massive'/>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            {/*<textarea onChange={(e)=>{this.setState({markdown: e.target.value})}}/>*/}\n                            <br/>\n                            <div style={{display: 'flex', flexDirection:\"column\", alignItems:'flex-start', width: '90vw', margin: 'auto', textAlign:'left' , overflowY: 'hidden', overflowX: \"scroll\"}}>\n                                {/*<Button onClick={()=>{*/}\n                                    {/*this.setState({googleDatabase: \"Passed!\", amazonDatabase: \"Passed!\",*/}\n                                    {/*})}}> Click Me!</Button>*/}\n                            <ReactMarkdown source={`\n## Blacklist History\n\n### Google Database:\n\n${googleDatabase || '<span class=\"lds-hourglass\"></span>'}\n<br/>\n### Monapi Database:\n\n${amazonDatabase|| '<span class=\"lds-hourglass\"></span>' }\n\n## WHOIS Information\n<span style=\"text-align: left\">\n ${ whois || '<span class=\"lds-hourglass\"></span>' }\n</span>\n\n## Phishing Detection\n\n ${ phishing || '<span class=\"lds-hourglass\"></span>' }\n\n## SSL Certificate Information\n\n ${ ssl || '<span class=\"lds-hourglass\"></span>' }\n\n\n## Service Available Rate\n\n\n| Item | Value |\n| ---: | :---: |\n| Last Check |  ${ lastCheck || '<span class=\"lds-hourglass\"></span>' } |\n| Rate | ${ availableRate || '<span class=\"lds-hourglass\"></span>' } |\n| Frequent | ${ frequent || '<span class=\"lds-hourglass\"></span>' } |\n| Total | ${ total || '<span class=\"lds-hourglass\"></span>' } |\n| Collected | ${ collected || '<span class=\"lds-hourglass\"></span>' } |\n`} escapeHtml={false}/>\n                            </div>\n                        </Grid.Row>\n                    </Grid>\n                  </Segment>\n                  <div style={{color: 'gray'}}>\n                      Proudly Provided By WatchFox\n                  </div>\n              </div>\n              :\"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}